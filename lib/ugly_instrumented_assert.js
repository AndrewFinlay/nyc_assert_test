'use strict';function cov_2amnin3uud(){var path="nycAssert/lib/assert.js";var hash="a76c2b788bcb22dfc02384bfaeeb97fe2eb7c850";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"nycAssert/lib/assert.js",statementMap:{"0":{start:{line:3,column:15},end:{line:3,column:32}},"1":{start:{line:8,column:17},end:{line:19,column:1}},"2":{start:{line:9,column:2},end:{line:18,column:3}},"3":{start:{line:11,column:4},end:{line:11,column:31}},"4":{start:{line:15,column:16},end:{line:15,column:55}},"5":{start:{line:16,column:4},end:{line:16,column:29}},"6":{start:{line:17,column:4},end:{line:17,column:12}},"7":{start:{line:21,column:0},end:{line:21,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:17},end:{line:8,column:18}},loc:{start:{line:8,column:41},end:{line:19,column:1}},line:8}},branchMap:{"0":{loc:{start:{line:15,column:16},end:{line:15,column:55}},type:"cond-expr",locations:[{start:{line:15,column:39},end:{line:15,column:40}},{start:{line:15,column:43},end:{line:15,column:55}}],line:15}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a76c2b788bcb22dfc02384bfaeeb97fe2eb7c850"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_2amnin3uud=function(){return actualCoverage;};return actualCoverage;}const assert=(cov_2amnin3uud().s[0]++,require('assert'));// nyc bug here
/**
 * Force assert to output the stack
 */cov_2amnin3uud().s[1]++;const assertFn=(condition,message)=>{cov_2amnin3uud().f[0]++;cov_2amnin3uud().s[2]++;try{cov_2amnin3uud().s[3]++;assert(condition,message);// Fails in here on mocha
}catch(e){const err=(cov_2amnin3uud().s[4]++,e instanceof Error?(cov_2amnin3uud().b[0][0]++,e):(cov_2amnin3uud().b[0][1]++,new Error(e)));cov_2amnin3uud().s[5]++;console.error(err.stack);cov_2amnin3uud().s[6]++;throw e;}};cov_2amnin3uud().s[7]++;module.exports=assertFn;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2VydC5qcyJdLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiYXNzZXJ0Rm4iLCJjb25kaXRpb24iLCJtZXNzYWdlIiwiZSIsImVyciIsIkVycm9yIiwiY29uc29sZSIsImVycm9yIiwic3RhY2siLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxhLHU5Q0FFQSxLQUFNQSxDQUFBQSxNQUFNLDBCQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFWLENBQVosQ0FBa0M7QUFFbEM7OzJCQUdBLEtBQU1DLENBQUFBLFFBQVEsQ0FBRyxDQUFDQyxTQUFELENBQVlDLE9BQVosR0FBd0IsaURBQ3ZDLEdBQ0EseUJBQ0VKLE1BQU0sQ0FBQ0csU0FBRCxDQUFZQyxPQUFaLENBQU4sQ0FBNkI7QUFDOUIsQ0FDRCxNQUFPQyxDQUFQLENBQ0EsQ0FDRSxLQUFNQyxDQUFBQSxHQUFHLDBCQUFJRCxDQUFDLFdBQVlFLENBQUFBLEtBQWQsNkJBQXVCRixDQUF2Qiw4QkFBMkIsR0FBSUUsQ0FBQUEsS0FBSixDQUFVRixDQUFWLENBQTNCLENBQUgsQ0FBVCxDQURGLHdCQUVFRyxPQUFPLENBQUNDLEtBQVIsQ0FBY0gsR0FBRyxDQUFDSSxLQUFsQixFQUZGLHdCQUdFLEtBQU1MLENBQUFBLENBQU4sQ0FDRCxDQUNGLENBWEQsQyx3QkFhQU0sTUFBTSxDQUFDQyxPQUFQLENBQWlCVixRQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7IC8vIG55YyBidWcgaGVyZVxuXG4vKipcbiAqIEZvcmNlIGFzc2VydCB0byBvdXRwdXQgdGhlIHN0YWNrXG4gKi9cbmNvbnN0IGFzc2VydEZuID0gKGNvbmRpdGlvbiwgbWVzc2FnZSkgPT4ge1xuICB0cnlcbiAge1xuICAgIGFzc2VydChjb25kaXRpb24sIG1lc3NhZ2UpOyAgLy8gRmFpbHMgaW4gaGVyZSBvbiBtb2NoYVxuICB9XG4gIGNhdGNoIChlKVxuICB7XG4gICAgY29uc3QgZXJyID0gKGUgaW5zdGFuY2VvZiBFcnJvcikgPyBlIDogbmV3IEVycm9yKGUpO1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyLnN0YWNrKTtcbiAgICB0aHJvdyBlO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFzc2VydEZuO1xuIl19